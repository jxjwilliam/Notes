{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "\n-- select meta().id from state\n-- select *  from state order by createDate desc\n\n\nMERGE INTO state s\n  USING (SELECT NULL) AS b ON KEY \"user-state::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n  WHEN MATCHED THEN\nUPDATE \n  SET s.currentLoginSession.startTime = NOW_MILLIS(),\n\ts.currentLoginSession.loginSessionId = \"727b69d0-e4ab-11e6-9f59-03826a2466a6\"\n\n\n-- localStorage:\n\nUPDATE default\n  SET i.subitems = ( ARRAY OBJECT_ADD(s, 'new', 'new_value' )\n    FOR s IN i.subitems END ) \n      FOR s IN ARRAY_FLATTEN(ARRAY i.subitems \n        FOR i IN items END, 1) END;\n\n\nselect u.*, uc.email from app uc \nleft join app u on keys uc.userPk\nleft join state s on keys 'user-state::' || meta(u).id || '::environment::45a9fbf2-b565-4922-ad58-980aa677deae'\nwhere any p in uc.permissions satisfies p.environmentPk = 'environment::45a9fbf2-b565-4922-ad58-980aa677deae' end\nand uc.userPk in ['user::0afb03a8-58d8-48a4-ac19-6f68b1f36992']\n\nselect * from app uc \nwhere any p in uc.permissions satisfies p.environmentPk = 'environment::45a9fbf2-b565-4922-ad58-980aa677deae' end\nand uc.userPk in ['user::0afb03a8-58d8-48a4-ac19-6f68b1f36992']\n\nselect * from app uc \nwhere any p in uc.permissions satisfies p.environmentPk = 'environment::45a9fbf2-b565-4922-ad58-980aa677deae' end\n\nselect * from app where type = 'user-credentials' limit 1\n\n\nSELECT \n    u.fullName.\\`first` AS \\`first\\`, \n    u.fullName.\\`last` AS \\`last\\`, \n    uc.email\n    FROM app uc USE KEYS 'user-credentials::wiliam@overpass.com'\n    LEFT JOIN app u ON KEYS uc.userPk\n    LEFT JOIN state s ON KEYS \"user-state::\" || meta(u).id || \"::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n\n SELECT uc.*,\n    u.fullName.\\`first` AS \\`first\\`, \n    u.fullName.\\`last` AS \\`last\\`, \n    uc.email\n    FROM app uc USE KEYS 'user-credentials::wiliam@overpass.com'\n    LEFT JOIN app u ON KEYS uc.userPk\n    LEFT JOIN state s ON KEYS \"user-state::\" || meta(u).id || \"::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n    \nSELECT \n    u.fullName.\\`first` AS \\`first\\`, \n    u.fullName.\\`last` AS \\`last\\`, \n    u.email,\n    s.*\n    FROM app u USE KEYS [\n        'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992',\n        \"user::56354979-7de5-4318-bdc0-c7f310c618a3\", \n        \"user::bac2271b-5002-4863-b36e-6edfffac9ab2\", \n        \"user::f639e918-9917-484b-b932-3290138c4c24\"\n    ]\n    LEFT JOIN state s ON KEYS \"user-state::\" || meta(u).id || \"::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n\n          ",
			"file": "query.txt",
			"file_size": 1356,
			"file_write_time": 131303562741756364,
			"settings":
			{
				"buffer_size": 2500,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "find . -mtime +0 # find files modified greater than 24 hours ago\nfind . -mtime 0 # find files modified between now and 1 day ago\n# (i.e., in the past 24 hours only)\nfind . -mtime -1 # find files modified less than 1 day ago (SAME AS -mtime 0)\nfind . -mtime 1 # find files modified between 24 and 48 hours ago\nfind . -mtime +1 # find files modified more than 48 hours ago\n\n\n\n\n\n\n\n#Will run the coomands at 11:59AM Everyday:\n59 11 * * * root find /overpass/application/reports/ -mtime +0 -type f -name \"report_*.xls\" -exec rm -f {} \\;\n\n#Will run the coomands at 12:00AM Everyday:\n0 0 * * * root find /overpass/application/reports/ -mtime +0 -type f -name \"report_*.csv\" -exec rm -f {} \\;",
			"file": "bin/cron.txt",
			"file_size": 0,
			"file_write_time": 131304429879340835,
			"settings":
			{
				"buffer_size": 684,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import State from 'ampersand-state';\nimport Collection  from 'ampersand-collection';\nimport GenericModel from '../genericModel';\n\n\nexport const TimeInterval = State.extend({\n    props: {\n        start: {\n            type: 'date',\n            required: true\n        },\n        end: {\n            type: 'date',\n            required: false\n        },\n        status: {\n            type: 'string',\n            required: true\n        }\n    }\n});\n\n\nexport const TimeIntervalCollection = Collection.extend({\n    model: TimeInterval\n});\n\n\nexport const UserStateModel = GenericModel.extend({\n    config: {\n        type: 'userState',\n        version: '0.1.1',\n        secondaryKeys: ['userId']\n    },\n    props: {\n        userId: {\n            type: 'string',\n            required: true\n        },\n        status: {\n            type: 'string',\n            required: true,\n            default: 'offline'\n        }\n    },\n    collections: {\n        timeIntervals: TimeIntervalCollection\n    }\n});\n\nexport default UserStateModel;\n\n\n\nconst ACTION_START = 'start';\n\nfunction startUserState(userId, status, envPk, sessionId, loginSessionId) {\n   let args = [].slice.call(arguments);\n   return _saveUserState(args.concat(ACTION_START));\n}\n\nfunction _saveUserState() {\n  let [userId, status, envPk, sessionId, loginSessionId] = arguments[0];\n  ....\n}",
			"file": "userStateModel.txt",
			"file_size": 1625,
			"file_write_time": 131300239991215868,
			"settings":
			{
				"buffer_size": 1332,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\"reports\": {\n  \"type\": \"static\",\n  \"directory\": \"../reports\",\n  \"options\": {\n    \"enable_directory_listing\": true,\n    \"mime_types\": {\n      \".csv\": \"text/csv\",\n      \".xlsx\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    }\n  }\n}\n\n\"options\": {\n  \"max_file_size\": 209715200,\n  \"file_permissions\": \"0644\",\n  \"file_types\": [\".csv\", \".xlsx\", \".spreadsheet\"],\n  \"enable_directory_listing\": true,\n  \"mime_types\": {\n    \".csv\": \"text/csv\",\n    \".xlsx\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n  }\n}\n\ncrossbar start --loglevel=debug\n\n",
			"file": "crossbar.txt",
			"file_size": 0,
			"file_write_time": 131303715829793623,
			"settings":
			{
				"buffer_size": 580,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "status.txt",
			"settings":
			{
				"buffer_size": 505,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* istanbul ignore next */\ndownloadCSV(filePath, response) {\n  const fileName = path.basename(filePath);\n\n  fs.exists(filePath, function(exists){\n    if (exists) {\n      response.writeHead(200, {\n        \"Content-Type\": \"text/csv\",\n        \"Content-Disposition\" : \"attachment; filename=\" + fileName\n      });\n      fs.createReadStream(filePath).pipe(response);\n    } else {\n      response.writeHead(400, {\"Content-Type\": \"text/plain\"});\n      response.end(\"ERROR File does NOT Exists\");\n    }\n  });\n}\n\n/* istanbul ignore next */\ndownloadXLSX(filePath, response) {\n  const fileName = path.basename(filePath);\n\n  fs.exists(filePath, function(exists){\n    if (exists) {\n      response.writeHead(200, {\n        \"Content-Type\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"Content-Disposition\" : \"attachment; filename=\" + fileName});\n      fs.createReadStream(filePath).pipe(response);\n    } else {\n      response.writeHead(400, {\"Content-Type\": \"text/plain\"});\n      response.end(\"ERROR File does NOT Exists\");\n    }\n  });\n}\n\n\nimport uuid from 'node-uuid';\nlet loginSessionId = 'loginSessionId::' + uuid.v1();\n\n\nloginSessions.add({\n  loginSessionId: sessionId.toString(),\n  startTime: new Date(),\n  endTime: new Date(),\n  states: states,\n  webSocketSessions: webSocketSessions\n});\n\n\n\n\nin chaim\n$ source params.rc\n$ gulp parse-config\n$ gulp build\n\nthen in olam\n$ source ../chaim.overpass.com/params.rc\n$ gulp parse-config\n$ sudo npm run develop (edited)\n\n\nbpop@mailinator.com / Benjamin001\n\nAdministrator / Overpass@40",
			"file": "BA-372.txt",
			"file_size": 3369,
			"file_write_time": 131300242402495825,
			"settings":
			{
				"buffer_size": 1546,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 12 files for \"user-state\"\n\n/home/william/Notes/overpass/BA-372.txt:\n  109        ]\n  110      },\n  111:     \"type\": \"user-state\",\n  112      \"version\": \"0.1.2\"\n  113    }`;\n\n/home/william/Notes/overpass/ba-366-365.txt:\n  163      LEFT JOIN keyspy ks ON KEYS \n  164      [\n  165:       \"user-state::userId::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992\",\n  166:       \"user-state::userId::user::bac2271b-5002-4863-b36e-6edfffac9ab2\",\n  167:       \"user-state::userId::user::f639e918-9917-484b-b932-3290138c4c24\"\n  168      ]\n  169  \n  ...\n  174  \n  175  select u.email, s.loginSessions \n  176: from app u USE  KEYS \"user-state::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n  177  left join state s on KEYS 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'    \n  178  \n  ...\n  182  select u.* from app u where userPk = 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'\n  183  \n  184: select meta() from state where id=\"user-state::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n  185  \n  186  select * from app use keys 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'\n\n/home/william/Notes/overpass/delegate.js:\n  190          }\n  191        ],\n  192:       \"type\": \"user-state\",\n  193        \"userId\": \"user::220b47b3-bbb8-42df-875a-15aa85d23975\",\n  194        \"version\": \"0.1.2\"\n  ...\n  237          }\n  238        ],\n  239:       \"type\": \"user-state\",\n  240        \"userId\": \"user::220b47b3-bbb8-42df-875a-15aa85d23975\",\n  241        \"version\": \"0.1.2\"\n  ...\n  306      \"lastKnownWebsocketSessionId\": \"4786655415246917\",\n  307      \"loginSessions\": [],\n  308:     \"type\": \"user-state\",\n  309      \"userId\": \"user::220b47b3-bbb8-42df-875a-15aa85d23975\",\n  310      \"version\": \"0.1.2\"\n\n/home/william/Notes/overpass/query.txt:\n    1  \n    2   MERGE INTO state s\n    3:   USING (SELECT NULL) AS b ON KEY \"user-state::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n    4    WHEN MATCHED THEN\n    5   UPDATE \n\n10 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 2070,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"contents": "\nthis.typeSchema = {\n    type: {\n        validate: () => ({\n            isValid: true,\n            message: 'Please use existing file type.'\n        })\n    }\n};\nthis.dataSchema = {\n    'User.first': {\n        required: true,\n        trim: true\n    },\n    'User.last': {\n        required: true,\n        trim: true\n    },\n    'User.email': {\n        required: true,\n        isEmail: false,\n        asyncValidate: (value, path, cb) => {\n        }\n    }\n};\n\nthis.s4 = () => {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\n//olam.overpass.com/workers/notificationWorker.js\nguidGenerator () {\n    const S4 = this.s4;\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\n   \n\n<op-dropdown items.bind=\"exportList\"  \n    selected.one-way=\"exportType\"\n    change.bind=\"exportFile\"\n    simple.bind=\"true\">\n</op-dropdown>\n\n\nflattenData() {\n    const documents = this.data;\n    return documents.map(doc => {\n        let newUser = {};\n        if (doc.user) {\n            _.forEach(Object.keys(doc.user), key => {\n                newUser['User.' + key] = doc.user[key]\n            });\n        }\n        const docWithoutUser = _.omit(documents, ['user']);\n        return _.merge(newUser, docWithoutUser);\n    });\n}\n\n\n/**\n * flatten {user: {first:'', last:'', email:''}} to {User.first:'', User.last:'', User.email:''}\n * @returns {Array}\n */\nflattenData1() {\n    const documents = this.data;\n    let newUser = {};\n    let user = _.pick(documents, ['user']);\n    const docWithoutUser = _.omit(documents, ['user'])\n    _.forEach (Object.keys(user), key => {\n        newUser['User.' + key] = user[key]\n    });\n    return _.merge(newUser, docWithoutUser);\n}\n\n\ngetExportData(userPks){\n    let keyspyKeys = userPks.map(item => {\n      return `userState::userId::${item}`;\n    });\n    let query = `SELECT \n                u.fullName.\\`first\\` \n                u.fullName.\\`last\\` \n                u.email\n                s.*\n                FROM app u USE KEYS $1\n                LEFT JOIN keyspy ks ON KEYS $2\n                LEFT JOIN state s ON KEYS ks.primaryKey`;\n    return this.connect()\n        .then(_ => {\n            return this.getByQuery(query, [userPks, keyspyKeys]);\n        })\n        .then(results => {\n            return results;\n        })\n}\n\nforEach(Object.keys(t), function(key) {\n    t[key] = exportData.toHHMMSS(t[key]);\n});\n\nselect a.email, a.userPk from app a where a.email like 'william%';\n\nselect * from app a where a.userPk = 'user::9fc33e57-e2f2-450e-9cec-8b9609fc30d5'\n\nstate: \"userId\": \"user::9fc33e57-e2f2-450e-9cec-8b9609fc30d5\"\n\n\n\n///////////////////////////////////\n\n1. when login, there will be an entry:\nstate: {\n    timeIntervals: [{\n        \"start\": ......\n        status: \"online\"\n    }],\n    userId: ...\n}\n\n2. when [available, inreview, oncall, wrapup, onbreak], there will be  entry for each action:\nstate: {\n    timeIntervals: [\n        ...,\n    {\n        \"start\": ......,\n        \"end\": ...\n        \"status\": (available | inreview | oncall | wrapup | onbreak)\n    }\n    // will continue to append in this array.\n    ]\n}\n\n3. when logoff, there will be new entry at the end of this object:\nstate: {\n    timeIntervals: [{\n        \"end\": ......\n        status: \"offline\"\n    }],\n    userId: ...\n}\n\nwith this action ('offline'), this state-object is closed.\n\n4. when User login again, there is a new object create to repeat 1-3.\nand So on.\n\nhttps://www.npmjs.com/package/google-spreadsheet\n\n\n[\"user::0afb03a8-58d8-48a4-ac19-6f68b1f36992\", \"user::bac2271b-5002-4863-b36e-6edfffac9ab2\", \"user::f639e918-9917-484b-b932-3290138c4c24\"]\n\nSELECT \n    u.fullName.\\`first\\` AS \\`first\\`, \n    u.fullName.\\`last\\` AS \\`last\\`, \n    u.email,\n    s.loginSessions.* \n    FROM app u USE  KEYS [\n      \"user::0afb03a8-58d8-48a4-ac19-6f68b1f36992\",\n      \"user::bac2271b-5002-4863-b36e-6edfffac9ab2\",\n      \"user::f639e918-9917-484b-b932-3290138c4c24\"\n    ]\n    LEFT JOIN keyspy ks ON KEYS \n    [\n      \"user-state::userId::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992\",\n      \"user-state::userId::user::bac2271b-5002-4863-b36e-6edfffac9ab2\",\n      \"user-state::userId::user::f639e918-9917-484b-b932-3290138c4c24\"\n    ]\n    LEFT JOIN state s ON KEYS ks.primaryKey\n\n\n\n\nselect u.email, s.loginSessions \nfrom app u USE  KEYS \"user-state::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\nleft join state s on KEYS 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'    \n\n\nselect * from state  where userId = 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'\n\nselect u.* from app u where userPk = 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'\n\nselect meta() from state where id=\"user-state::user::0afb03a8-58d8-48a4-ac19-6f68b1f36992::environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n\nselect * from app use keys 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'\n\n// user-credentials::bpop@mailinator.com\n{\n  \"type\": \"user-credentials\",\n  \"version\": \"0.1.1\",\n  \"createDate\": 1485527691792,\n  \"passwordHash\": \"$2a$12$kf3C/IZsJIM7WRCinjvWPutkH.i6/.RNK0Aexs9MmEkPElQO8ohUK\",\n  \"userPk\": \"user::0afb03a8-58d8-48a4-ac19-6f68b1f36992\",\n  \"email\": \"bpop@mailinator.com\",\n  \"state\": \"active\",\n  \"token\": \"6422a1fe-ff49-4b92-b0e0-97373c7648a0\",\n  \"tokenData\": {\n    \"nextAction\": \"validate-account\",\n    \"expireTime\": 1485786891787,\n    \"used\": true\n  },\n  \"permissions\": [\n    {\n      \"level\": \"environment\",\n      \"levelPk\":\"environment::45a9fbf2-b565-4922-ad58-980aa677deae\",\n      \"role\": \"admin\",\n      \"environmentPk\": \"environment::45a9fbf2-b565-4922-ad58-980aa677deae\"\n    }\n  ]\n}\n\n//select meta().id from app where app.userPk = 'user::0afb03a8-58d8-48a4-ac19-6f68b1f36992'\n\n\n",
			"file": "ba-366-365.txt",
			"file_size": 5670,
			"file_write_time": 131300184158736868,
			"settings":
			{
				"buffer_size": 5671,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/william/Notes/overpass",
		"/home/william/Notes/overpass/bin"
	],
	"file_history":
	[
		"/home/william/Notes/overpass/overpass",
		"/home/william/Notes/overpass/query.txt",
		"/home/william/Notes/overpass/bitbucket-repository.txt",
		"/overpass/application/chaim.overpass.com/params.rc"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"user-state",
			"user::0afb03a8-58d8-48a4-ac19-6f68b1f36992"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "query.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2500,
						"regions":
						{
						},
						"selection":
						[
							[
								2490,
								2490
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 719.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bin/cron.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 684,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "userStateModel.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1332,
						"regions":
						{
						},
						"selection":
						[
							[
								1017,
								1017
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "crossbar.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 580,
						"regions":
						{
						},
						"selection":
						[
							[
								580,
								580
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "status.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 505,
						"regions":
						{
						},
						"selection":
						[
							[
								505,
								505
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "BA-372.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1546,
						"regions":
						{
						},
						"selection":
						[
							[
								1313,
								1313
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2070,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										127,
										137
									],
									[
										296,
										306
									],
									[
										375,
										385
									],
									[
										454,
										464
									],
									[
										622,
										632
									],
									[
										964,
										974
									],
									[
										1256,
										1266
									],
									[
										1431,
										1441
									],
									[
										1665,
										1675
									],
									[
										1893,
										1903
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								313,
								313
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ba-366-365.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5671,
						"regions":
						{
						},
						"selection":
						[
							[
								5671,
								5671
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 561.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "overpass.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 230.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
