import State from 'ampersand-state';
import Collection  from 'ampersand-collection';
import GenericModel from '../genericModel';


export const TimeInterval = State.extend({
    props: {
        start: {
            type: 'date',
            required: true
        },
        end: {
            type: 'date',
            required: false
        },
        status: {
            type: 'string',
            required: true
        }
    }
});


export const TimeIntervalCollection = Collection.extend({
    model: TimeInterval
});


export const UserStateModel = GenericModel.extend({
    config: {
        type: 'userState',
        version: '0.1.1',
        secondaryKeys: ['userId']
    },
    props: {
        userId: {
            type: 'string',
            required: true
        },
        status: {
            type: 'string',
            required: true,
            default: 'offline'
        }
    },
    collections: {
        timeIntervals: TimeIntervalCollection
    }
});

export default UserStateModel;



const ACTION_START = 'start';

function startUserState(userId, status, envPk, sessionId, loginSessionId) {
   let args = [].slice.call(arguments);
   return _saveUserState(args.concat(ACTION_START));
}

function _saveUserState() {
  let [userId, status, envPk, sessionId, loginSessionId] = arguments[0];
  ....
}