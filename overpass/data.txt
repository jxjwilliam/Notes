getAgentsExportStatusData


agentStatuses_container


renderTo:'container'


#/dashboard/environment::45a9fbf2-b565-4922-ad58-980aa677deae/agent-console/campaign::a19a4a2f-fa0f-41bc-9658-1d9a5618112d/default?contact=contact::e57c0071-fdf6-11e6-8842-67e31386ac1e


//if(inReviewY==0 && onCallY==0 && wrapUpY==0) {
//	try {
//		let div = document.getElementById('callBreaks_container');
//		div.style.display = '';
//		div.innerHTML = [
//			'<h3>No Data in Pie Chart</h3>',
//			'<p style="margin-top:20px;">No data to display</p>'
//		].join('\n');
//	}
//	catch (e) {}
//	return;
//}
// let callData = [];
// if(inReviewY > 0) {
// 	callData.push({ name: 'In Review', y:inReviewY });
// }
// if(onCallY > 0) {
// 	callData.push({ name: 'On Call', y: onCallY });
// }
// if(wrapUpY > 0) {
// 	callData.push({ name: 'Wrap Up', y: wrapUpY });
// }



*** NOTICE ***

There are 3 PRs related each other:

- gps: BA-CHAIM-OLAM-agents-fix
- chaim: BA-CHAIM-OLAM-agents-fix
- olam: cm-agents-highcharts


import StateServer from 'chaim.overpass.com/dist/user/state/state.server';

services.getExportStatusData = (args) => {
	return new StateServer().getExportStatusData(args[0], args[1], args[2]);
}


+//getExportStatusData(exportType, campaignPk, userPks, authToken)
+//getExportStatusData(exportType, agents)

services.getExportStatusData = (args) => {
	return new CampaignServer().getExportStatusData(args[0], args[1], args[2], args[3]);
}

services.generateExport = (args) => {
	return new CampaignServer().generateExport(args[0], args[1]);	
}


this.ea.publish('campaignMonitor.outcomechanged', selectedOption);