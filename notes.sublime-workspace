{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "\npackage dependency manager\ninjector \njavascript file loader\nconcatenate/Uglify\n\nRequireJS manages: Load dependency, Runtime dependency\nAngularJS manages: Construction dependency(Ioc), Angular Module dependency\n\n\ndefine() - define dependencies & register factory function\n\nrequire() - callback function to be invoked; when the tree of all define()s have completed\n\nrequirejs.config() - configure source paths & aliases\n\nrequire(['jquery'], function($) {\n	$(document).ready(function() {\n	...\n});\n\nrequire(['app'], function(app) {\n	app.init();\n});\n\n// work fine.\nrequire(['jquery', 'someJqueryPlugin'], function($) {\n	/* $ is mapped to the first dependency, which is jquery */\n});\n\n\n// WRONG!\n        it('should requirejs define works', function () {\n            var defined = define(function () {\n                return {\n                    color: \"black\",\n                    size: \"unisize\"\n                }\n            });\n            expect(require('defined').color).toBe('black');\n        });\n\n        it('should require exports module work', function() {\n           define(function(require, exports, module) {\n              var config = require('js/api/config');\n\n               return function() {};\n           });\n        });\n\n        it('should require work', function() {\n            define(['require'], function(require) {\n                var vedioAd = require('js/api/vedio-ad');\n            })\n        })\n\n",
			"file": "2014/requirejs.txt",
			"file_size": 708,
			"file_write_time": 130928501630000000,
			"settings":
			{
				"buffer_size": 1420,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "If async is present: The script is executed asynchronously with the rest of the page (the script will be executed while the page continues the parsing)\n\n	script = document.createElement(\"script\");\n	script.type = 'text/javascript';\n	script.async = true;\n	script.defer = true;\n	script.src = protocol + 'marvilias.com/adBlockDetector/12265';\n	$('body').append(script);\n\n	////////\n	put <script></script> in the bottom of <body/> will make the page render faster.\n\n\n\n\nGetVideoCollectio\n\n//\ncd webmd-video\nsudo npm install karma-cli -g\nnpm install karma --save-dev\nnpm install karma-jasmine karma-chrome-launcher --save-dev\n\nkarma init\n\nsudo npm install phantomjs -g\nnpm install karma-phantomjs-launcher --save-dev\n\nkarma start --browsers PhantomJS\n\n\nnpm install jquery@1.11.2 --save-dev\n\n$ npm install karma-fixture --save-dev\n\n$ npm install karma-html2js-preprocessor --save-dev\n$ npm install karma-json-fixtures-preprocessor --save-dev",
			"file": "webmd/11-18-2015.txt",
			"file_size": 781,
			"file_write_time": 130928501030000000,
			"settings":
			{
				"buffer_size": 932,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "package install",
		"selected_items":
		[
			[
				"package install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/wjiang/Notes",
		"/Users/wjiang/Notes/2015",
		"/Users/wjiang/Notes/webmd"
	],
	"file_history":
	[
		"/Users/wjiang/Notes/2014/requirejs1.txt",
		"/Users/wjiang/Notes/webmd/11-18-2015.txt",
		"/Users/wjiang/Notes/2015/09-12.txt",
		"/Users/wjiang/Notes/2014/11-08.txt"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"requre",
			"phantomjs",
			"karma"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "2014/requirejs.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1420,
						"regions":
						{
						},
						"selection":
						[
							[
								926,
								926
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "webmd/11-18-2015.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 932,
						"regions":
						{
						},
						"selection":
						[
							[
								932,
								932
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 163.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "notes.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
