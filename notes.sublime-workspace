{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "https://securepubads.g.doubleclick.net/gampad/ads?gdfp_req=1&correlator=208…82&vrp=82&ga_vid=1050008334.1458585540&ga_sid=1458585540&ga_hid=1421773109\n\n\n\n\n\nPPE-51568's supplement:\n\nWe can call, refresh ad(s) at any time and any place. e.g., for slideshow, pagination, we can custom the ad display: \n\n(1) We send pubads() no matter how many and when; and all the return jsonp-data will be stored in googletag.cmd queue.\n\n(2) from googletag.cmd, We just selectively fetch all or part of them to show or hide; or cache them to a new array to do the custom.\nThis gives us the convenient to use these ads.\n\n\n\n\n\n\ns_cuih\n// \"497_3491_26466\"\ns_cuim\n// \"1101_1551_3151_4338_29619_14177_1100_21192\"\ns_cuil\n// \"1786_8897_9045_592_4892_5319_509_596_9040_9043_9046_32784_1761_4386_8898_15115_32772_32792_9044\"\n\n\nvar len = 0;\n[s_cuih, s_cuim, s_cuil].forEach(function(cui) {\n   len += cui.split('_').length;\n});\nconsole.log(len);\n// 30\n\n\n\nvar targets = {};\nvar setCUIs = function (targets) {\n	var cui_str = '', cuih, cuim, cuil;\n	cuih = typeof window.s_cuih !== 'undefined' ? window.s_cuih : '';\n	cuim = typeof window.s_cuim !== 'undefined' ? window.s_cuim : '';\n	cuil = typeof window.s_cuil !== 'undefined' ? window.s_cuil : '';\n	[cuih, cuim, cuil].forEach(function (cui, index) {\n		if (cui) {\n			cui_str += ',' + cui.split('_').map(function (v) {\n					return v + '_' + (index + 1);\n				}).join(',');\n		}\n	});\n	if (cui_str) {\n		cui_str = cui_str.replace(/^,/, '').replace(/,$/, '');\n		targets.cui = cui_str;\n	}\n	return targets;\n};\nsetCUIs(targets);\n\n\ntargets.cui.split(',').length\n//30\n\n\n\nvar cui_string=targets.cui.replace(/_\\d,/g, '_').replace(/_\\d$/, '')\n\n\ns_cuih+'_'+s_cuim+'_'+s_cuil === cui_string\n//\ntrue\n\nThis means the order and number all match.",
			"file": "webmd/1.",
			"file_size": 782,
			"file_write_time": 131030426170000000,
			"settings":
			{
				"buffer_size": 1742,
				"line_ending": "Unix",
				"name": "1."
			}
		},
		{
			"contents": "•	Multiple ads can be placed on a page.\n•	Each ad is identified by a “POS” value. Within a single page, each POS must be unique. We will be using the legacy POS values from our old ads system whenever possible.\n•	Each ad can specify a range of ad sizes that are possible. For example, a right ad can specify a single size of 300x200, or it can specify multiple sizes 350x200,350x600, etc.\n•	Targeting information can be set globally for all ads on the page. For example, a topic id can be sent to the ad system. It is technically possible to set targeting information for a single ad on the page, but we are limiting ourselves to send the same targeting information for all ads.\n•	All ad positions on the page can be dynamically refreshed (without the need for reloading the page). In our old ad system, we refreshed selected ad positions on the page, but now we can refresh them all.\n",
			"file": "webmd/03-23.txt",
			"file_size": 0,
			"file_write_time": 131032294530000000,
			"settings":
			{
				"buffer_size": 885,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "### DFP\n\nGoogle DFPP (Dart For Publishers Premium) ad system\n\n\n### Solr\n\n\n\n### Message Queue\n\n\n\n\n### \n\nnode-apac - Node.js client for the Amazon Product Advertising API, including support of Request Signatures\n\n\n### Charles\n\n\n\n\nPPE-38021\nDisclaimer Text on BC Pages\n\nhttp://www.webmd.com/brandcast/default.htm\nnativo-tags-poc-title\nmodule in content pane 20. The location of the module may change, but in any case, that’s the module that needs changing. \nhtml module. \n\n\n\n///////////\nnpm install hoverboard\nbower install hoverboard-flux\n\n\n\n\n<script type=\"text/javascript\">\n    var googletag = googletag || {};\n    googletag.cmd = googletag.cmd || [];\n\n    (function () {\n        window.advBidxc = window.advBidxc || {};\n        window.advBidxc.renderAd = function () {\n        };\n        window.advBidxc.startTime = new Date().getTime();\n        window.advBidxc.timeout = 300;\n        window.advBidxc.version = 2.4;\n\n        var ismobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n        if (ismobile) {\n            window.advBidxc.customerId = '8CUF3O331';\n        }\n        else {\n            window.advBidxc.customerId = '8CU66J63J';\n        }\n\n        var mnSrc = ('https:' == document.location.protocol ? 'https:' : 'http:') + '//contextual.media.net/bidexchange.js?cid=' + window.advBidxc.customerId + '&version=' + window.advBidxc.version;\n        document.write('<scr' + 'ipt type=\"text/javascript\" src=\"' + mnSrc + '\"></scr' + 'ipt>');\n\n        window.advBidxc.isWebmdGptInit = true;\n        setTimeout(function () {\n            if (!window.advBidxc.isAdServerLoaded) {\n                var gads, node, useSSL;\n                gads = document.createElement(\"script\");\n                gads.async = true;\n                gads.type = \"text/javascript\";\n                useSSL = \"https:\" === document.location.protocol;\n                gads.src = (useSSL ? \"https:\" : \"http:\") + \"//www.googletagservices.com/tag/js/gpt.js\";\n                node = document.getElementsByTagName(\"script\")[0];\n                node.parentNode.insertBefore(gads, node);\n                window.advBidxc.isAdServerLoaded = true;\n            }\n        }, 0);\n    })();\n</script>\n\n",
			"file": "webmd/DFP.txt",
			"file_size": 2194,
			"file_write_time": 131027029710000000,
			"settings":
			{
				"buffer_size": 2192,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<script type=\"text/javascript\"> \nvar googletag = googletag || {};\ngoogletag.cmd = googletag.cmd || [];\n(function () {\n    window.advBidxc = window.advBidxc || {};\n    window.advBidxc.renderAd = function () {\n    };\n    window.advBidxc.startTime = new Date().getTime();\n    window.advBidxc.timeout = 300;\n    window.advBidxc.version = 2.4;\n    window.advBidxc.customerId = \"Customer Id\";\n\n    //Media.net Customer ID\n    function loadScript(tagSrc) {\n        if (tagSrc.substr(0, 4) !== 'http') {\n            var isSSL = 'https:' == document.location.protocol;\n            tagSrc = (isSSL ? 'https:' : 'http:') + tagSrc;\n        }\n        var scriptTag = document.createElement('script'), placeTag = document.getElementsByTagName(\"script\")[0];\n        scriptTag.type = 'text/javascript';\n        scriptTag.async = true;\n        scriptTag.src = tagSrc;\n        placeTag.parentNode.insertBefore(scriptTag, placeTag);\n    }\n\n    function loadGPT() {\n        if (!window.advBidxc.isAdServerLoaded) {\n            loadScript('//www.googletagservices.com/tag/js/gpt.js');\n            window.advBidxc.isAdServerLoaded = true;\n        }\n    }\n\n    function loadGPTAfterDelay(MAX_DELAY) {\n        window.advBidxc.isWebmdGptInit = true;\n        setTimeout(window.advBidxc.loadGPT, MAX_DELAY || window.advBidxc.timeout);\n        //Default 300MS\n    }\n\n    window.advBidxc.loadGPT = loadGPT;\n    window.advBidxc.loadGPTAfterDelay = loadGPTAfterDelay;\n    var mnSrc = ('https:' == document.location.protocol ? 'https:' : 'http:') + '//contextual.media.net/bidexchange.js?cid=' + window.advBidxc.customerId + '&version=' + window.advBidxc.version;\n    document.write('<scr' + 'ipt type=\"text/javascript\" src=\"' + mnSrc + '\"></scr' + 'ipt>');\n})(); </script>\n</body>\n</html>\n\n\n/////////////////////////////////\n\nhttp://www.googletagservices.com/tag/js/gpt.js\n\nhttp://partner.googleadservices.com/gpt/pubads_impl_79.js\n\n\n\n\nhttp://c8stage.media.net/__media__/js/test/webmd-header-bidding-desktop.php\n\nhttp://c8stage.media.net/__media__/js/test/webmd-header-bidding-mobile.php\n\n\n/////////////////////\n\nmnetbidPrice \nmnetbidderID \nmnetCrid\nmnet_placement\nmnetSize\nmnetPageID\nmnetCId\nmnTest \n\n\n/////////////////////\n\n1. IIFE (Immediately Invoked Function Expression):\n(function() {\n  // fetch gpt.js\n})();\n\ngpt.js is a IIFE itself, so as soon as it is download, it self-executes immediately,  and is immediately available.\n\n(function(exports) {\n\n  var ads2 = {\n    ...\n  };\n\n  exports.ads2 = ads2;  \n\n})(window);\n\n\n\n\n(function(exports) {\n\n  var ads2Consumer = {\n    ...\n  };\n\n  exports.ads2Consumer = ads2Consumer;    \n\n})(window);\n\n\n\nSo we get:\n- window.ads2 \n- window.ads2Consumer\n- window.gpt-others\n- ...\n\n\n\n2. document.ready:\n// use jQuery way\n$(function() {\n  // call webmd.ads2, webmd.adsConsumer for render the page\n  // could be ajax calls \n});\n\n\n3. window.load:\n// use jQuery way\n$(window).load(function() {\n    \n});\n\n\n\nIf we google, we can find that js libaray or pluggable components are very common using this solution.\n\nIn this way, it is clean, structured and pluggable, easily managable and reading.\n\n- JS codes will become clean and easy management.\n\n- Don't need to locate the place where the code should put into (meta-ahead, top of head, top of home-page etc). \n\n- setTimeout() is option, depending on we need it or not. \n\n- pretty safe, all is local variables instead of global, so don't need to worry about naming-conflict.\n\n- if we need use ads2 in ads2Consumer,\n(function(exports, ads2) {\n    \n})(windows, windows.ads2);\n\n\n///////////////////////////\n\n- jQuery-1.8.2\n- requirejs\n- xLazyLoader\n- modernizr\n- define('css')\n- JSON\n\n\n///////////////////////\n\n\nPlease ignore the previous email. While reading the document, I am more familiar with it.\n\nThe gpt finds the defineAd targets to get the publisher tags then search media.net server to find the correct ad(s).\n\n- 8CU66J63J\n- media.net\n\n\n///////////////////////\n\nRunning \"tasks\" task\n\nPlease choose a build:      Creates the following:\n>> grunt webmd          scripts.js, scripts_harmony.js, scripts_mobile.js, oo_shim.js, oo_shim_mobile.js\n>> grunt core           scripts.js\n>> grunt core_harmony   scripts_harmony.js\n>> grunt mobile         scripts_mobile.js\n>> grunt oo_all         oo_shim.js, oo_shim_mobile.js\n>> grunt oo             oo_shim.js\n>> grunt ooMobile       oo_shim_mobile.js\n>> grunt uk             scripts.js,scripts_boots_mobile.js\n>> grunt boots          scripts.js\n>> grunt bootsMobile        scripts_boots_mobile.js\n>> grunt syndicated     scripts_syndicated.js, scripts_harmony_syndicated.js, scripts_mobile_syndicated.js,\n\nIngestion targets:\n>> grunt webmd-ingest:prodlive\n>> grunt webmd-ingest:prodstaging\n>> grunt webmd-ingest:perflive\n>> grunt webmd-ingest:perfstaging\n>> grunt webmd-ingest:qa00live\n>> grunt webmd-ingest:qa00staging\n>> grunt webmd-ingest:qa01live\n>> grunt webmd-ingest:qa01staging\n\n///////////////\n<script type=\"text/javascript\" class=\"googleloaded\">\n    (function () {\n        if (typeof googletag === 'object') {\n            return;\n        }\n        if ((typeof document.domain !== \"undefined\") && (document.domain.toLowerCase().indexOf(\"fit.\") < 0) && (document.domain.toLowerCase().indexOf(\".webmd.boots.com\") < 0)) {\n            var gads, node, useSSL;\n            gads = document.createElement(\"script\");\n            gads.async = true;\n            gads.type = \"text/javascript\";\n            useSSL = \"https:\" === document.location.protocol;\n            gads.src = (useSSL ? \"https:\" : \"http:\") + \"//www.googletagservices.com/tag/js/gpt.js\";\n            node = document.getElementsByTagName(\"script\")[0];\n            node.parentNode.insertBefore(gads, node);\n        }\n    })();\n</script>\n///////////////\n\nwebmd.debug = function () {\n    var a = Array.prototype.slice.call(arguments);\n    webmd.debug.active && window.console && (console.log.apply ? console.log.apply(console, a) : console.log(a))\n}\n\n\nwebmd.debug = (function() {\n    var a = Array.prototype.slice.call(arguments);\n    var print = webmd.debug.active && window.console && (console.log.apply ? console.log.apply(console, a) : console.log(a))\n    return function() {\n        return print;    \n    }\n})();\n\n\nwebmd.debug = (function() {\n    var debug=/(localhost|192\\.168\\.|127\\.0\\.0)/.test(location.host) && !!window.console;\n    return function() {\n        return debug ? console.log.apply(console, arguments) : null;\n    }\n})();\n",
			"file": "webmd/apt.txt",
			"file_size": 6506,
			"file_write_time": 131008979940000000,
			"settings":
			{
				"buffer_size": 6506,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "webmd/untitled",
			"file_size": 1506,
			"file_write_time": 131021242720000000,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n\n\nfunction getDMP() {\n	return webmd.cookie.getJson('ads_perm', {domain: \"webmd.com\"}).segvar;\n}\n\nfunction getDMPLength() {\n	return webmd.cookie.getJson('ads_perm', {domain: \"webmd.com\"}).segvar.length;\n}\n\nfunction setDMP(dmp) {\n\n	var ads_perm_value = '';\n	dmp.split(',').forEach(function(v) {\n	  ads_perm_value += 'l_' + v + 'x';\n	});\n	var ads_perm_obj = { 'segvar': ads_perm_value };\n	webmd.cookie.setJson('ads_perm', ads_perm_obj, {domain: \"webmd.com\"});\n	return webmd.cookie.getJson('ads_perm', {domain: \"webmd.com\"}).segvar;\n}\n\n\nfunction appendDMP(dmp) {\n\n	//(1) get old-dmp from cookie['ads_perm']:\n	var cookieValue = webmd.cookie.getJson('ads_perm', {domain: \"webmd.com\"}).segvar;\n	var splitCookie = cookieValue.split(/(x)?l_/);\n\n	var old_dmp = splitCookie.forEach(function(v) {\n	  if( (typeof v !== 'undefined') && (v !== 'segvar') && (v !== 'x') ){\n	    dmp.push(v);\n	  }\n	}).join(',');\n\n	dmp += old_dmp;\n	var ads_perm_value = '';\n	dmp.split(',').forEach(function(v) {\n	  ads_perm_value += 'l_' + v + 'x';\n	});\n\n	var ads_perm_obj = { 'segvar': ads_perm_value };\n	webmd.cookie.setJson('ads_perm', ads_perm_obj, {domain: \"webmd.com\"});\n	return webmd.cookie.getJson('ads_perm', {domain: \"webmd.com\"}).segvar;\n}\n\n\n// Test:\n\ngetDMP();\n\ngetDMPLength();\n\nvar dmp = \"a2816,a32925,a131179,a127022,z00182,a118963,a2790,z030159,a00087,a2836,z00127,a2804,a2808,a2800,a33116,a32934,a123035,a2865,a129792,a01503,a2828,a33079,a2794,z30287,a2900,a32930,z00200,z02999,a2798,a32965\";\n\n\nsetDMP(dmp);\n\nappendDMP(dmp);\n",
			"file": "webmd/js/03-31.jx",
			"file_size": 0,
			"file_write_time": 131039061640000000,
			"settings":
			{
				"buffer_size": 1508,
				"line_ending": "Unix"
			}
		},
		{
			"file": "webmd/txt/01-28.txt",
			"settings":
			{
				"buffer_size": 7986,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "package install",
		"selected_items":
		[
			[
				"package install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/wjiang/Notes",
		"/Users/wjiang/Notes/2016",
		"/Users/wjiang/Notes/webmd",
		"/Users/wjiang/Notes/webmd/js",
		"/Users/wjiang/Notes/webmd/txt"
	],
	"file_history":
	[
		"/Users/wjiang/Notes/webmd/txt/03-07.txt",
		"/Users/wjiang/Notes/2016/03-24.txt",
		"/Users/wjiang/Notes/webmd/03-14.txt",
		"/Users/wjiang/Notes/webmd/DFP.txt",
		"/Users/wjiang/Notes/2014/git.txt",
		"/Users/wjiang/Notes/webmd/untitled",
		"/Users/wjiang/Notes/webmd/header-bidding.txt",
		"/Users/wjiang/Notes/webmd/gpt.txt",
		"/Users/wjiang/Notes/webmd/apt.txt",
		"/Users/wjiang/Notes/webmd/questions.txt",
		"/Users/wjiang/Notes/webmd/ppe-41041.txt",
		"/Users/wjiang/Notes/webmd/sprint20.txt",
		"/Users/wjiang/Notes/webmd/header.txt",
		"/Users/wjiang/Notes/webmd/03-07.txt",
		"/Users/wjiang/Notes/webmd/performance.txt",
		"/Users/wjiang/Notes/webmd/nodexml.txt",
		"/Users/wjiang/Notes/webmd/nodeApp.txt",
		"/Users/wjiang/Notes/webmd/Working with Varala, Mahesh for the non-apple devi",
		"/Users/wjiang/Notes/webmd/feature-PPE38895_header_bidding.txt",
		"/Users/wjiang/Notes/webmd/medianet.txt",
		"/Users/wjiang/Notes/webmd/meeting-02-22.txt",
		"/Users/wjiang/Notes/webmd/01-28-2016.txt",
		"/Users/wjiang/Notes/webmd/02-16.txt",
		"/Users/wjiang/Notes/webmd/metrics.txt",
		"/Users/wjiang/Notes/webmd/heartbeat-document.txt",
		"/Users/wjiang/Notes/webmd/12-08.txt",
		"/Users/wjiang/Notes/webmd/11-18.txt",
		"/Users/wjiang/Notes/webmd/12-02.txt",
		"/Users/wjiang/Notes/webmd/webmd-header-bdding.html",
		"/Users/wjiang/Notes/webmd/video-heartbeat.txt",
		"/Users/wjiang/Notes/webmd/video-heartbeat.js",
		"/Users/wjiang/Notes/webmd/heartbeat.js",
		"/Users/wjiang/Notes/webmd/newsletter.txt",
		"/Users/wjiang/Notes/javascript/react.js",
		"/Users/wjiang/Notes/webmd/12-10.txt",
		"/Users/wjiang/Notes/javascript/js-call.js",
		"/Users/wjiang/Notes/2015/react.txt",
		"/Users/wjiang/Notes/server/rest.js",
		"/Users/wjiang/Notes/etc/bash_profile",
		"/Users/wjiang/Notes/webmd/11-18-2015.txt",
		"/Users/wjiang/Notes/webmd/DOMContentLoaded.txt",
		"/Users/wjiang/Notes/javascript/john_papa.js",
		"/Users/wjiang/Notes/javascript/general1.js",
		"/Users/wjiang/Notes/jsbin/direcitves-product.html",
		"/Users/wjiang/Notes/markdown/react.md",
		"/Users/wjiang/Notes/2014/test.txt",
		"/Users/wjiang/Notes/2014/requirejs.txt",
		"/Users/wjiang/Notes/2014/requirejs1.txt",
		"/Users/wjiang/Notes/2015/09-12.txt",
		"/Users/wjiang/Notes/2014/11-08.txt"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"nwids",
			"t[0]",
			"immidiate",
			"trunc",
			"cui=",
			"tug",
			"tug=",
			"2083",
			"post",
			"var dmp",
			"var dmp=",
			"var dmp",
			"2,083",
			"83",
			"2048",
			"dmp",
			"mnet",
			"cui",
			"cui=",
			"cui",
			"dmp",
			"cui=",
			"split",
			"cui=",
			"cui",
			"yahoo",
			"editorial1",
			"nodejs",
			"gpt",
			"googletag",
			"grunt",
			"media.net",
			"mnSrc",
			"googletag",
			"class=\"googleloaded\"",
			"chapter",
			"video.analytics.provider.js:",
			"dispathEvent",
			"sid:",
			"window.navigator.userAgent",
			"mnetbid",
			"google",
			"loadGPTAfterDelay",
			"advbidxc",
			"advbid",
			"window.navigator.userAgent",
			"mobile",
			"for",
			"video",
			"before",
			"appMeasure",
			"getAds",
			"ADB.va.plugins.videoplayer.VideoPlayerPluginDelegate;",
			"self.",
			"facade",
			"configure",
			"ADB.va.",
			"appMeasurement",
			"visitor",
			"config.",
			"HeartbeatProxy",
			"AdobeHeartbeatPlugin",
			"perf.",
			"pagebuilder",
			"user",
			"npm",
			"request",
			"request\nrequest",
			"node-gyp",
			"babel",
			"commentsList",
			"commentList",
			"babel",
			"requre",
			"phantomjs",
			"karma"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"heartbeat.",
			"WebmdHeartbeat"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "webmd/1.",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1742,
						"regions":
						{
						},
						"selection":
						[
							[
								605,
								605
							]
						],
						"settings":
						{
							"auto_name": "1.",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "webmd/03-23.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 885,
						"regions":
						{
						},
						"selection":
						[
							[
								885,
								885
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "webmd/DFP.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2192,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "webmd/apt.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6506,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3081.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "webmd/untitled",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "webmd/js/03-31.jx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1508,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "webmd/txt/01-28.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7986,
						"regions":
						{
						},
						"selection":
						[
							[
								7140,
								7140
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3801.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "notes.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 207.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
