// underscore:

var fullNames = _.pluck(data.personnel, 'fullName');

function filterPerson(value) {
	return /gibson/i.test(value) === true;
}

fullNames.filter(filterPerson); 
["Gibson , Antoine Jamel", "Gibson , Andrew Thomas"]

////////////////
jQuery._data(document, "events");



pid=`ps -ef | grep mysqld | grep -v grep | wc -l`
if [ $pid -eq 1 ];then
  mysql.server restart
fi

pid=`ps -ef | grep java | grep jetty | grep -v grep | wc -l`
if [ $pid -eq 1 ];then
  cd ~/PubMatic/pub-api-automated-guaranteed/
  mvn jetty:run
fi



////////////////

app.factory('locations', function($http) {
  var promise = null;
 
  return function() {
    if (promise) {
      // If we've already asked for this data once,
      // return the promise that already exists.
      return promise;
    } else {
      promise = $http.get('locations/locations.json');
      return promise;
    }
  };
});
 
app.controller('SomeController', function($scope, locations) {
  locations().success(function(data) {
    $scope.locations = data;
  });
});

/** 
<ul class="list">
   <li ng-repeat="location in locations">
      <a href="#">{{location.id}}. {{location.name}}</a>
   </li>
</ul>
<map locations='locations'></map>
*/

app.directive('map', function() {
  return {
    restrict: 'E',
    replace: true,
    template: '<div></div>',
    scope: {
      // creates a scope variable in your directive
      // called `locations` bound to whatever was passed
      // in via the `locations` attribute in the DOM
      locations: '=locations'
    },
    link: function(scope, element, attrs) {
      scope.$watch('locations', function(locations) {
        angular.forEach(locations, function(location, key) {
          // do something
        });
      });
    }
  };
});

