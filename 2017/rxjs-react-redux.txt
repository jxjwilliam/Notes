rxjs + react + redux: Netflix

Observables, Prmoise, Cancelable

RxJS - lodash for async - Ben Lesh

const subscription = myObservable.subscribe(
	x => console.log('next', x),
	err => console.error('error', err)
	() => console.log('complete')
);
subscription.unsubscribe();


- map, filter, reduce, 
- concat, merge, zip
- debounce, throttle, delay, buttfer, combineLatest
retry, repeat

redux - observable,
Epic: a function that takes a stream of all actions dispatched and returns a stream of new actions to dispatch.
actions in, acitons out.



//////////
function getUser(username) {
	return $.ajax().promise();
}

const inputSource$ = Rx.Observable.fromEvent($('#input'), 'keyup')
	.map(e => e.target.value)
	.switchMap(v => {
		return Rx.Observable.fromPromise(getUser(v));
	});


inputSource$.subscribe(x => {

	$('#name').text(x.data.name);
	$('#blog').text(x.data.blog);
	$('#repos').text('Public Repos: ' + x.data.public_repos);
});