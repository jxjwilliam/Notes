The highlights:
================
- xml to json without xslt, natural and faster.
- Dynamically locating ‘ContentPane’ partials into html-page, easily extending and reusable.. 
- Multi-paritial rendering at same time.
- Use js class inheritance, façade pattern
- Interface for objects injection and integration.
- Easy to upgrade: MVC. 
- Clear structure: controllers folder for parsing and objects assembly, routes folder for rendering, views folder for ejs templates, and modules/ folder for xml-resources 
- The codes follow webmd-xsd-schemas.
- Controllers can be reusable, e.g.: editorial1.xml and editorial2.xml share same controller.
- Test scripts include in test folder (jasmine for unit test)
- Server-side rendering html-page with ejs template, better performance


1. structure from yeoman / node-express
1. test frameworks



clean
faster, performance
moduluar



1. server-side render -> home page
1. resource load:
    <script>
    <link css>
    <img src="">



. static files
. mongo storage
. cache server (php memcached) + reverse-proxy(nginx)


- granular video engagement metrics: react, Components

////////////

<pane name="ContentPane13">
    <module chronic_id="091e9c5e80f08908" class="LinkListModule"
            r_object_id="091e9c5e81165b2c" path="linklist.xml"/>
</pane>
<pane name="ContentPane29">
</pane>
<pane name="ContentPane47">
    </pane>
<pane name="ContentPane12">
    <module chronic_id="091e9c5e80f08908" class="LinkListModule"
            r_object_id="091e9c5e81165b2c" path="linklist.xml"/>
    <module chronic_id="091e9c5e80f046b5" class="EditorialModule"
            r_object_id="091e9c5e8131b989" path="editorial1.xml"/>
    <module chronic_id="091e9c5e80f4bedb" class="EditorialModule"
            r_object_id="091e9c5e81165b24" path="editorial2.xml"/>
</pane>
